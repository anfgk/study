3. useState란?
useState는 React에서 컴포넌트의 상태(state)를 관리할 수 있게 해주는 훅(Hook)이다. 
상태란 말 그대로 화면에 영향을 주는 데이터이고, 이 데이터가 바뀌면 자동으로 컴포넌트가 다시 렌더링된다.

3.1 기본 개념
import { useState } from 'react';

function Counter() {
  const [count, setCount] = useState(0);

  return (
    <div>
      <p>현재 숫자: {count}</p>
      <button onClick={() => setCount(count + 1)}>+1</button>
    </div>
  );
}

3.2 구조 설명
const [상태값, 상태를바꾸는함수] = useState(초기값);
- count: 현재 상태 (숫자 0부터 시작)
- setCount: 상태를 변경하는 함수
- useState(0): 초기값을 0으로 설정

3.3 동작 흐름
- 컴포넌트가 처음 렌더링될 때 count는 0.
- 버튼 클릭 시 setCount(count + 1) 실행.
- 상태가 바뀌면 React가 컴포넌트를 자동으로 다시 렌더링.
- 바뀐 count 값이 화면에 반영됨.

3.4 예시
가장 기본적인 형태
const [변수, 변경함수] = useState(변수기본값)
변경함수: 변수의 값을 바꾸는 함수입니다.

문자열 상태
const [name, setName] = useState('정하');

boolean 상태 (ON/OFF)
const [isOn, setIsOn] = useState(false);

3.5 주의할 점
상태는 직접 수정하지 말고 set함수로만 바꿔야한다.
count = count + 1 ❌ (직접 수정하면 렌더링 안 됨)
setCount(count + 1) ✅
상태 변경은 비동기처럼 작동한다. 바로 반영되지 않을 수 있다.

3.6 언제 사용되나요?
- 버튼 누를 때 숫자 올라가게
- 입력창에 입력한 텍스트 저장할 때
- ON/OFF 기능 만들 때
- 조건에 따라 다른 화면을 보여줄 때 등등

