3. 별도의 프로젝트 초기 설정이 필요한 이유

3.1 강의 흐름과 구조화된 학습을 위해서
강의는 보통 기초부터 실전까지 점진적으로 실습을 통해 배우는 방식이다.
그래서 각 섹션이나 챕터마다 주제에 맞는 최소한의 설정만 갖춘 환경이 필요하다.

예시:
- 초반: 기본 HTML/CSS/JS → React 도입
- 중반: React 컴포넌트 → Hook → Redux
- 후반: 라우팅 → SSR(Next.js) → 배포

이런 흐름에 맞춰 프로젝트를 나누지 않으면 너무 많은 코드가 한 곳에 섞여 버리고, 학습 포인트를 구분하기 어려워진다.

3.2 불필요한 의존성과 혼란 방지
React는 다양한 생태계 도구와 함께 사용된다:
- CRA(Create React App)이나 Vite 같은 번들러
- 상태관리 라이브러리: Redux, Zustand 등
- 라우팅 라이브러리: react-router-dom, Next.js
→ 이걸 한 프로젝트에 전부 섞어버리면, 강의 초보 학습자 입장에서 어느 코드가 어떤 기능인지 파악이 안된다.

3.3 버전 충돌 및 오류 최소화
React 생태계는 빠르게 변화한다.

이렇게 하면:
- 여러분이 실습 중 버전 차이로 오류 나는 걸 방지하고,
- 복잡한 설정을 미리 해주기 때문에 더 학습에 집중할 수 있다.

3.4 실무에서도 프로젝트 셋업은 핵심
실제 개발에서도 "초기 세팅"은 굉장히 중요하다.
- 개발/배포 환경 분리
- 라우팅 설정
- 상태관리 구조 설계
- 코드 스타일 가이드